@page "/people"
@page "/"

<TableTemplate RowType="Person" RowData="People" Highlight="@(p => p.Location?.City)" SortDirection="@(p => p.Surname)">
    <Header>
        <tr>
            <th>ID</th><th>Name</th><th>Dept</th><th>Location</th>
            <td></td>
        </tr>
    </Header>
    <RowTemplate Context="p">
        <td>@p.PersonId</td>
        <td>@p.Surname, @p.Firstname</td>
        <td>@p.Department?.Name</td>
        <td>@p.Location?.City, @p.Location?.State</td>
        <td>
            <NavLink class="btn btn-sm btn-info" href="@GetEditUrl(p.PersonId)">Edit</NavLink>
        </td>
    </RowTemplate>
</TableTemplate>


<ThemeWrapper Theme="info" Title="Location Selector">
    <SelectFilter values="@Cities" title="@SelectTitle" @bind-SelectedValue="SelectedCity"/>

    <button class="btn btn-primary mt-2" @onclick="@(() => SelectedCity = "Oakland")">
        Change
    </button>
</ThemeWrapper>

<NavLink class="btn btn-primary" href="/depts">Departments</NavLink>

@code {
    [Inject]
    public DataContext? Context { get; set; }

    public IEnumerable<Person>? People => Context?.People.Include(p => p.Department).Include(p => p.Location);
    public IEnumerable<string>? Cities => Context?.Locations.Select(l => l.City);
    public string SelectedCity { get; set; } = string.Empty;
    public string GetClass(string? city) => SelectedCity == city ? "bg-info text-white" : "";

    [Parameter]
    public int ItemCount { get; set; } = 4;

    [Parameter]
    public string? SelectTitle { get; set; }

    //public void HandleCustom(string newValue)
    //{
    //    SelectedCity = newValue;
    //}

    public string GetEditUrl(long id) => $"/person/{id}";

}
