@page "/pages"
@model IndexModel

<h4 class="bg-primary text-white text-center p-2">People</h4>

<table class="table table-sm table-bordered table-striped">
    <thead>
        <tr>
            <th>ID</th><th>Name</th><th>Dept</th><th>Location</th>
        </tr>
    </thead>
    <tbody>
        @foreach(Person p in Model?.People ?? Enumerable.Empty<Person>())
        {
            <tr class="@Model?.GetClass(p.Location?.City)">
                <td>@p.PersonId</td>
                <td>@p.Surname, @p.Firstname</td>
                <td>@p.Department?.Name</td>
                <td>@p.Location?.City, @p.Location?.State</td>
            </tr>
        }
    </tbody>
</table>

<form asp-page="Index" method="get">
    <div class="form-group">
        <label for="selectedCity">City</label>
        <select name="selectedCity" class="form-control">
            <option disabled selected>Select City</option>
            @foreach(string city in Model?.Cities ?? Enumerable.Empty<string>())
            {
                <option selected="@(city == Model?.SelectedCity)">
                    @city
                </option>
            }
        </select>
    </div>
    <button class="btn btn-primary mt-2" type="submit">Select</button>
</form>

@functions{
    public class IndexModel : PageModel
    {
        private DataContext _dataContext;
        public IndexModel(DataContext dataContext)
        {
            _dataContext = dataContext;
        }
        public IEnumerable<Person> People { get; set; } = Enumerable.Empty<Person>();
        public IEnumerable<string> Cities { get; set; } = Enumerable.Empty<string>();

        [FromQuery]
        public string SelectedCity { get; set; } = String.Empty;

        public void OnGet()
        {
            People = _dataContext.People.Include(p => p.Department).Include(p => p.Location);
            Cities = _dataContext.Locations.Select(l => l.City).Distinct();
        }

        public string GetClass(string? city) => SelectedCity == city ? "bg-info text-white" : "";
    }
}